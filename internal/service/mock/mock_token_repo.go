// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/elangreza/content-management-system/internal/service (interfaces: tokenRepo)
//
// Generated by this command:
//
//	mockgen -destination=mock/mock_token_repo.go -package=service_mock . tokenRepo
//

// Package service_mock is a generated GoMock package.
package service_mock

import (
	context "context"
	reflect "reflect"

	entity "github.com/elangreza/content-management-system/internal/entity"
	uuid "github.com/google/uuid"
	gomock "go.uber.org/mock/gomock"
)

// MocktokenRepo is a mock of tokenRepo interface.
type MocktokenRepo struct {
	ctrl     *gomock.Controller
	recorder *MocktokenRepoMockRecorder
	isgomock struct{}
}

// MocktokenRepoMockRecorder is the mock recorder for MocktokenRepo.
type MocktokenRepoMockRecorder struct {
	mock *MocktokenRepo
}

// NewMocktokenRepo creates a new mock instance.
func NewMocktokenRepo(ctrl *gomock.Controller) *MocktokenRepo {
	mock := &MocktokenRepo{ctrl: ctrl}
	mock.recorder = &MocktokenRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktokenRepo) EXPECT() *MocktokenRepoMockRecorder {
	return m.recorder
}

// CreateToken mocks base method.
func (m *MocktokenRepo) CreateToken(ctx context.Context, token entity.Token) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MocktokenRepoMockRecorder) CreateToken(ctx, token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MocktokenRepo)(nil).CreateToken), ctx, token)
}

// GetTokenByTokenID mocks base method.
func (m *MocktokenRepo) GetTokenByTokenID(ctx context.Context, tokenID uuid.UUID) (*entity.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenByTokenID", ctx, tokenID)
	ret0, _ := ret[0].(*entity.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenByTokenID indicates an expected call of GetTokenByTokenID.
func (mr *MocktokenRepoMockRecorder) GetTokenByTokenID(ctx, tokenID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenByTokenID", reflect.TypeOf((*MocktokenRepo)(nil).GetTokenByTokenID), ctx, tokenID)
}

// GetTokenByUserID mocks base method.
func (m *MocktokenRepo) GetTokenByUserID(ctx context.Context, userID uuid.UUID) (*entity.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenByUserID", ctx, userID)
	ret0, _ := ret[0].(*entity.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenByUserID indicates an expected call of GetTokenByUserID.
func (mr *MocktokenRepoMockRecorder) GetTokenByUserID(ctx, userID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenByUserID", reflect.TypeOf((*MocktokenRepo)(nil).GetTokenByUserID), ctx, userID)
}
